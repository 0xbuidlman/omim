#pragma once

#include "std/limits.hpp"
#include "std/unique_ptr.hpp"

class MwmValue;

namespace search
{
namespace v2
{
class HouseToStreetTable
{
public:
  virtual ~HouseToStreetTable() = default;

  /// @todo Actually, value may be nullptr in the very common case .
  /// It's better to construct a table from MwmHandle.
  static unique_ptr<HouseToStreetTable> Load(MwmValue & value);

  // Returns true and stores to |streetIndex| an index number of a
  // correct street corresponding to a house in a list of streets
  // generated by ReverseGeocoder.  Returns false if there're no such
  // street.
  virtual bool Get(uint32_t houseId, uint32_t & streetIndex) const = 0;
};
}  // namespace v2
}  // namespace search
