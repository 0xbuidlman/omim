Windows:

- Unzip NDK
- Install Cygwin with gnu make and launch it
$ export NDK_ROOT=C:/path/to/android-ndk-<version>
$ export NDK_HOST=windows
$ mkdir omim-android-debug
$ cd omim-android-debug
$ /cygdrive/path_to_QtSDK/path_to_Qt/mingw/bin/qmake.exe -r ../omim/omim.pro -spec ../omim/tools/mkspecs/android-g++ CONFIG+=debug
$ /cygdrive/path_to_QtSDK/mingw/bin/mingw32-make.exe


Mac OS X:

- Unzip NDK
- Create android-debug configuration in the QtCreator and set it's properties:
--- Shadow dir omim-android-<configuration>-armeabi
--- Override qmake parameters: -spec /path/to/omim/tools/mkspecs/android-g++
--- Set Environment variables
    NDK_ROOT=/path/to/android-ndk-<version>
    NDK_HOST=darwin-x86
- Enjoy using QtCreator!


!!!!! For any system !!!!!
- See additional scripts and follow their instructions in <omim>/tools/android
--- Rename originat aapt file (<SDK>/platform_tools/aapt) to aapt2
--- Copy <omim>/tools/android/aapt to <SDK>/platform_tools/
--- Run <omim>/tools/android/update_assets.sh

How to configure Debug/Release configurations in Eclipse:

- Go to project properties/C++ build
- Set additional parameter for ndk-build: NDK_DEBUG=1
- Go to "manage configurations" at the top left and rename active Default configuration to Debug
- Copy Debug configuration and rename it to Release
- Change ndk-build's parameter NDK_DEBUG=1 to NDK_DEBUG=0 in Release
